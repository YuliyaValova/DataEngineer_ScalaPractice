package load
import connection.DB2Connector
import generator.RecordsGenerator

case object LoadStarter{


  /**
   * Entry point of the program. This app creates a table in DB2 on Cloud with 20k sample records.
   * product_id - autogenerated numeric
   * product_group - autogenerated numeric in 0..9 range
   * year - autogenerated numeric in 2015..2018 range
   * 12 columns with monthly purchases amount - numeric in 0..100000 range
   * There should be no duplicates for the same product/year
   * If there are multiple product rows for different years, product/group combination should be concise
   */

  def main(args: Array[String]): Unit = {
    checkArgs(args)
    val url = args(0)
    val username = args(1)
    val password = args(2)
    val tableName = args(3)
    val rowsNumber = args(4).toInt
    val connection = DB2Connector.getConnectionToDatabase(url, username, password)
    val generator:RecordsGenerator = new RecordsGenerator
    generator.generateTable(connection, tableName, rowsNumber)
    val loader = new DataLoader
    DB2Connector.retrieveConnection(connection)
    //println(loader.selectAll(connection, tableName))
    //loader.dropTable(connection, tableName)
  }



  def checkArgs(args:Array[String]):Unit = {
    try {
      if (args.size != 5) {
        println("Invalid parameters number.")
        System.exit(1)
      }
      args(4).toInt
    } catch {
      case e:Exception => {
        println("Invalid rowNumber entered.")
        e.printStackTrace()
        System.exit(1)
      }
    }
  }
}
